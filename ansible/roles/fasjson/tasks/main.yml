---
- name: Install RPM packages
  dnf:
    name:
      - httpd
      - mod_auth_gssapi
      - mod_session
      - python3-mod_wsgi
      - python3-dns
      - python3-flask
      - python3-gssapi
      - python3-ldap
      - python3-pip
      - python3-wheel
      - python3-devel
      - openldap-devel
      - krb5-devel
      - poetry
      - python3-tox
      - "@Development Tools"
      - vim
      - tmux
      - python3-libselinux
    state: present

- name: Allow apache to see /srv
  sefcontext:
    target: "/srv(/.*)?"
    setype: httpd_sys_content_t

- name: Install fasjson with Pip
  pip:
    name:
      - fasjson

- name: Install the bashrc
  copy:
    src: bashrc
    dest: /etc/profile.d/vagrant-fasjson.sh
    mode: 0644
    owner: root
    group: root

- name: Copy wsgi
  copy:
    src: fasjson.wsgi
    dest: /srv/fasjson.wsgi
    mode: 0644
    owner: vagrant
    group: vagrant
  notify:
    - restart httpd

- name: kinit for FASJSON
  shell: echo {{ ipa_admin_password }} | kinit {{ ipa_admin_user }}@{{ krb_realm }}

- name: Create the vhost in IPA
  import_role:
    name: ipa-vhost
  vars:
    app_name: fasjson

- name: Create the fasjson service delegation rule
  shell: ipa servicedelegationrule-add fasjson-delegation
  register: result
  changed_when: '"Added servicedelegationrule" in result.stdout'
  failed_when: '" already exists" not in result.stderr and result.rc != 0'

- name: Add fasjson to the service delegation rule
  shell: ipa servicedelegationrule-add-member --principals HTTP/{{ vhost }} fasjson-delegation
  register: result
  changed_when: '"Member added to servicedelegationrule" in result.stdout'
  failed_when: '"HTTP/"+vhost+": This entry is already a member" not in result.stdout and result.rc != 0'

- name: Add the LDAP delegation target to the service delegation rule
  shell: ipa servicedelegationrule-add-target --servicedelegationtargets=ipa-ldap-delegation-targets fasjson-delegation
  register: result
  changed_when: '"Number of targets added 1" in result.stdout'
  failed_when: '"ipa-ldap-delegation-targets: This entry is already a member" not in result.stdout and result.rc != 0'

- name: Create the HTTP delegation target
  shell: ipa servicedelegationtarget-add ipa-http-delegation-targets
  register: result
  changed_when: '"Added servicedelegationtarget" in result.stdout'
  failed_when: '" already exists" not in result.stderr and result.rc != 0'

- name: Add IPA to the HTTP delegation target
  shell: ipa servicedelegationtarget-add-member ipa-http-delegation-targets --principals=HTTP/ipa.tinystage.test@{{ krb_realm }}
  register: result
  changed_when: '"Member added to servicedelegationtarget" in result.stdout'
  failed_when: '"HTTP/ipa.tinystage.test@"+krb_realm+": This entry is already a member" not in result.stdout and result.rc != 0'

- name: Add the HTTP delegation target to the delegation rule
  shell: ipa servicedelegationrule-add-target --servicedelegationtargets=ipa-http-delegation-targets fasjson-delegation
  register: result
  changed_when: '"Number of targets added 1" in result.stdout'
  failed_when: '"ipa-http-delegation-targets: This entry is already a member" not in result.stdout and result.rc != 0'

- name: Configure temporary files
  copy:
    src: tmpfiles.conf
    dest: /etc/tmpfiles.d/fasjson.conf

- name: Create temporary file
  shell: systemd-tmpfiles --create
  args:
    creates: /run/fasjson/ccaches

- name: Tune SELinux Policy
  seboolean:
    name: "{{ item }}"
    state: yes
    persistent: yes
  with_items:
    - httpd_can_connect_ldap
    - httpd_can_network_connect
    - httpd_use_fusefs
  notify:
    - restart httpd

- name: Create Apache service config directory
  file:
    path: /etc/systemd/system/httpd.service.d
    state: directory
    mode: 0755

- name: Copy the Apache config
  template:
    src: httpd.conf
    dest: /etc/httpd/conf.d/fasjson.conf
  notify:
    - restart httpd

- name: Allow apache to modify files in /run/fasjson
  community.general.sefcontext:
    target: '/var/run/fasjson(/.*)?'
    setype: httpd_var_run_t
    state: present

- name: Enable and restart Apache
  systemd:
    state: restarted
    name: httpd
    enabled: yes
    daemon_reload: yes
