---
- name: Enable EPEL
  dnf:
      name: ['epel-release']
      state: present

# limnoria depends on python3-mock which is in powertools
- name: Enable CentOS Powertools
  ini_file:
    path: /etc/yum.repos.d/CentOS-Linux-PowerTools.repo
    section: powertools
    option: enabled
    value: "1"

# enable epel testing
- name: Enable EPEL updates-testing
  ini_file:
    path: /etc/yum.repos.d/epel-testing.repo
    section: epel-testing
    option: enabled
    value: "1"

- name: enable rabbitmq repo
  copy:
      src: rabbitmq.repo
      dest: /etc/yum.repos.d/rabbitmq.repo

# https://kojipkgs.fedoraproject.org//work/tasks/6262/68326262/python3-sgmllib3k-1.0.0-2.el8.noarch.rpm
- name: Install RPM packages
  dnf:
      name: ['rabbitmq-server', 'limnoria', 'supybot-fedora', 'python3-sgmllib3k', 'supybot-koji', 'https://kojipkgs.fedoraproject.org//packages/supybot-meetbot/0.3/1.el8/noarch/supybot-meetbot-0.3-1.el8.noarch.rpm', 'supybot-notify', 'ngircd', 'weechat', 'git', 'vim', 'krb5-workstation', 'krb5-devel', 'gcc', 'gssproxy', 'ipa-client']
      disable_gpg_check: yes
      state: present

- name: set ngircd config
  copy:
      src: ngircd.conf
      dest: /etc/ngircd.conf

- name: Start ngircd service using systemd
  systemd:
    state: started
    name: ngircd
    daemon_reload: yes
    enabled: yes

- name: Start rabbitmq-server service using systemd
  systemd:
    state: started
    name: rabbitmq-server
    daemon_reload: yes
    enabled: yes

#- name: install python deps with poetry
#  shell: poetry install
#  become: yes
#  become_user: vagrant
#  args:
#    chdir: /vagrant/

- name: Uninstall any old clients
  shell: ipa-client-install --uninstall --unattended
  ignore_errors: yes

- name: Enroll system as IPA client
  shell: ipa-client-install --hostname nonbot.tinystage.test --domain tinystage.test --realm {{ krb_realm }} --server ipa.tinystage.test -p {{ ipa_admin_user }} -w {{ ipa_admin_password }} -U -N --force-join

- name: kinit
  shell: echo "{{ipa_admin_password}}" | kinit {{ ipa_admin_user }}@{{ krb_realm }}

- name: Delete any old service in IPA
  command: ipa service-del NONBOT/nonbot.tinystage.test
  ignore_errors: yes

- name: Create the service in IPA
  command: ipa service-add NONBOT/nonbot.tinystage.test

- name: Get service keytab for NONBOT
  shell: ipa-getkeytab -p NONBOT/nonbot.tinystage.test@{{ krb_realm }} -k /var/lib/gssproxy/nonbot.keytab
  args:
    creates: /var/lib/gssproxy/nonbot.keytab

- name: Set the correct permissions on keytab
  file:
    path: /var/lib/gssproxy/nonbot.keytab
    owner: root
    group: root
    mode: 0640

- name: Copy gssproxy conf
  copy:
    src: gssproxy-nonbot.conf
    dest: /etc/gssproxy/98-nonbot.conf
    mode: 0644
    owner: root
    group: root

- name: Enable and restart GSSProxy
  systemd:
    state: restarted
    name: gssproxy
    enabled: yes
    daemon_reload: yes

- name: copy supybot config
  copy:
      src: supybot
      dest: /home/vagrant
      owner: vagrant
      group: vagrant

- name: Install the systemd unit files for the nonbot service
  copy:
      src: nonbot.service
      dest: /etc/systemd/system/nonbot.service
      mode: 0644

- name: Start nonbot service using systemd
  systemd:
    state: started
    name: nonbot
    daemon_reload: yes
    enabled: yes

- name: Install the .bashrc
  copy:
      src: .bashrc
      dest: /home/vagrant/.bashrc
      mode: 0644
      owner: vagrant
      group: vagrant
