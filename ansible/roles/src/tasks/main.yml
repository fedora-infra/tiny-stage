---
- name: Install helpful development packages
  dnf:
    name:
        - git
        - python3
        - python3-devel
        - libgit2-devel
        - redis
        - libjpeg-devel
        - gcc
        - libffi-devel
        - redhat-rpm-config
        - fasjson-client
        - python-pygit2
        - python-mock
        - python-beautifulsoup4
    state: present


- name: Git checkout
  ansible.builtin.git:
    repo: 'https://pagure.io/pagure.git'
    dest: /home/vagrant/pagure
    force: true

# installing pygit2 from pip was causing issues, so we just
# use the RPM version instead. Here we just yank that line
# from  our checked out requirements.txt
- name: remove pygit2 from pip install
  ansible.builtin.lineinfile:
    path: /home/vagrant/pagure/requirements.txt
    regexp: '^pygit2'
    state: absent
    backup: yes

- name: install pagure requirements
  pip:
    requirements: /home/vagrant/pagure/requirements.txt

- name: create all the directories used by pagure
  file: state=directory
        path={{ item }}
  with_items:
  - /home/vagrant/pagure/lcl/repos
  - /home/vagrant/pagure/lcl/remotes
  - /home/vagrant/pagure/lcl/attachments
  - /home/vagrant/pagure/lcl/releases


- name: copy alembic.ini
  copy:
    src: alembic.ini
    dest: /home/vagrant/pagure/alembic.ini

- name: copy pagure.cfg
  copy:
    src: pagure.cfg
    dest: /home/vagrant/pagure/lcl/pagure.cfg


- name: wipe database
  file:
    path: /var/tmp/pagure_dev.sqlite
    state: absent

- name: create database
  command: python createdb.py --initial alembic.ini
  args:
    chdir: /home/vagrant/pagure/


- name: Enable and redis
  systemd:
    state: started
    name: redis
    enabled: yes
    daemon_reload: yes

- name: Install the systemd unit files for election services
  copy:
      src: "{{ item }}"
      dest: /etc/systemd/system/{{ item }}
      mode: 0644
  with_items:
      - pagure_worker.service
      - pagure.service

- name: Enable and start worker
  systemd:
    state: started
    name: pagure_worker
    enabled: yes
    daemon_reload: yes

- name: Enable and start pagure
  systemd:
    state: started
    name: pagure
    enabled: yes
    daemon_reload: yes

- name: kinit for Pagure
  shell: echo {{ ipa_admin_password }} | kinit {{ ipa_admin_user }}@{{ krb_realm }}

- name: install dev data creation script
  copy:
    src: dev-data.py
    dest: /home/vagrant/pagure/dev-data.py

- name: create data
  command: python dev-data.py
  environment:
    REQUESTS_CA_BUNDLE: /etc/pki/tls/certs/ca-bundle.crt
  args:
    chdir: /home/vagrant/pagure/
